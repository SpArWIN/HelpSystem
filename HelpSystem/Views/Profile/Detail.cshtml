@model HelpSystem.Domain.ViewModel.Profile.ProfileViewModel

@{
    ViewBag.Title = "Профиль";
    Layout = "_Layout";
   
  
}
<meta charset="utf-8" />
<head>
    <link rel="icon" href="@Url.Content("~/favicon.ico")" />
    <link href="~/css/myanimate.css" rel="stylesheet" />
</head>
<style>
   
    .table-container {
        border: 5px solid #ccc; 
        border-radius: 5px; 
        overflow - x: auto;
        overflow-y: auto;
        max-height: 300px;
        margin-bottom:20px;
        padding:5px;
    }
    .table {
        width: 100%; 
        border-collapse: collapse; /* Слияние границ ячеек */
    }

    .table-scroll {
        width: 100%; /* Занимаем всю доступную ширину */
        padding: 8px;
    }

        .table-scroll thead th,
        .table-scroll tbody td {
            white-space: nowrap; /* Предотвращаем перенос текста */
        }

       .table-scroll tbody tr:hover{
           background-color:#fff999;
       }
</style>
<input type="hidden" id="profileId" value="@Model.Id" />
<br/>
<div class="card card-step1 border-warning mb-3" style="margin:5px; max-width: 100%;">
    <div class="row g-0">
        <div class="col-md-12">
            <h5 class="card-header text-center">Профиль</h5>
        </div>
        <div class="col-md-8">
            <div class=" card-body">
                @if (Model != null)
                {
                    <h5 class="card-title">Фамилия: @(!string.IsNullOrEmpty(Model.LastName) ? Model.LastName : "-")</h5>
                    <h5 class="card-title">Имя:@Model?.Name</h5>
                    <h5 class="card-title">Отчество: @(!string.IsNullOrEmpty(Model.Surname) ? Model.Surname : "-")</h5>
                    <h5 class="card-title">Почта: @(!string.IsNullOrEmpty(Model.Email) ? Model.Email :"-")</h5>
                }
                else
                {
                    <h5 class="card-title">Фамилия: -</h5>
                    <h5 class="card-title">Имя: @Model?.Name</h5>
                    <h5 class="card-title">Отчество: -</h5>
                    <h5 class="card-title">Почта: -</h5>
                }
            </div>
        </div>
        <div class="card-footer">
            <div class="d-grid gap-2">
                <a class="btn btn-change btn-outline-warning" onclick="openModal({modalId: 'modal', url:'/Profile/GetProfile', data: '@Model.Id', context: 'profile'})">Изменить</a>
                <a class="btn btn-pass btn-outline-danger" id="ChangePassword">Сменить пароль</a>
            </div>
        </div>
    </div>
</div>
<script>
    var User;
</script>
@if (Model.UserPdocut != null && Model.UserPdocut.Any())
{
    <p style="background-color: #ffff99; " class="text-center"> <strong>Прикреплённые товар(ы)</strong> </p>
    @if (User.IsInRole("3"))
    {
       
        <div class="table-container">

            <script>
                var User = "Admin";
            </script>
            <table id="BindingProductId" class="table table-pr table-bordered table-scroll">
                <thead>
                <tr>
                  
                    <th>Наименование</th>
                    <th>Инвентарный код</th>
                    <th>Количество</th>
                    <th>Действия</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var product in Model.UserPdocut)
                {
                    <tr>
                        
                        <td class="text-center">@product.NameProduct</td>
                            <td class="text-center" >@product.InventoryCod</td>
                            <td class="text-center" >@product.TotalCount</td>
                        <td>
                            <div class="d-grid gap-2">
                                <button id="unbinding" data-product-id ="@product.Id" class="btn btn-success btn-sm ">Открепить</button>
                            </div>
                        </td>

                    </tr>
                }
                </tbody>
              
            </table>
        </div>
        <div style="background-color: #ffff99; " class="text-center mt-3">
            <strong>Общее количество прикрепленных товаров: @Model.SumTotalProducts</strong>
        </div>
    }
    else
    {
        <div class="table-container">
            <script>
                var User = "User";
            </script>

            <table id="BindingProductId" class="table pr-table table-bordered table-scroll">
                <thead>
                <tr>
                    <th style="display:none">id</th>
                    <th >Наименование</th>
                    <th>Инвентарный код</th>
                    <th>Количество</th>

                </tr>
                </thead>
                <tbody>
                @foreach (var product in Model.UserPdocut)
                {
                    <tr>
                        <td style="display:none">@product.Id</td>
                            <td class="text-center" >@product.NameProduct</td>
                            <td class="text-center" >@product.InventoryCod</td>
                            <td class="text-center" >@product.TotalCount</td>
                    </tr>
                }
                </tbody>
              
            </table>
        </div>
        <div style="background-color: #ffff99;" class="text-center mt-3">
            <strong>Общее количество прикрепленных товаров: @Model.SumTotalProducts</strong>
        </div>
    }
 

}





@section Scripts
    {

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js"></script>
      
        <script>
            $(document).ready(function () {
                $('.card').addClass('show');
                $('#BindingProductId').on('click', '#unbinding', function () {
                    // Находим родительскую строку tr
                    var row = $(this).closest('tr');
                    var id = $(this).data('product-id'); // Получаем Id товара из скрытой ячейки

                    var nameProduct = row.find('td:eq(0)').text(); // Наименование товара
                    var inventoryCode = row.find('td:eq(1)').text(); // Инвентарный код
                    var ProfileId = $('#profileId').val();

                    // Показываем подтверждающее уведомление без запроса количества
                    Swal.fire({
                        title: `Вы действительно хотите отвязать товар "${nameProduct}"  "${inventoryCode}"?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Да, отвязать',
                        cancelButtonText: 'Отмена'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var productsToUnbind = [{
                                ProductId: id
                            }];
                            // Вызываем функцию отвязки товара, передавая Id товара
                            UnbindingProduct(ProfileId, productsToUnbind);
                        }
                    });
                });
                initializeProfileTable();

                $('#ChangePassword').on('click', function () {
                    Swal.fire({
                        title: 'Сменить пароль',
                        html: `
                                                            <input type="password" id="newPassword" class="swal2-input" placeholder="Введите новый пароль" style = " font-size: 21px; width:300px;">
                                                            <input type="password" id="confirmPassword" class="swal2-input" placeholder="Подтвердите новый пароль" style = " font-size: 21px; width:300px;">
                                                `,
                        showCancelButton: true,
                        confirmButtonText: 'Сменить',
                        cancelButtonText: 'Отмена',
                        preConfirm: () => {
                            const newPassword = Swal.getPopup().querySelector('#newPassword').value;
                            const confirmPassword = Swal.getPopup().querySelector('#confirmPassword').value;

                            return { newPassword: newPassword, confirmPassword: confirmPassword };
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            const userId = '@Model.Id'; // Подставьте сюда реальное значение UserId с сервера
                            const data = {
                                UserId: userId,
                                NewPassword: result.value.newPassword,
                                NewDubletPassword: result.value.confirmPassword
                            };

                            $.ajax({
                                url: '/Account/Change',
                                type: 'POST',
                                data: { profile: data },
                                success: function (response) {
                                    Swal.fire('Успех!', response.description, 'success');
                                },
                                error: function (response) {
                                    Swal.fire('Ошибка', response.responseJSON.description, 'error');
                                }
                            });
                        }
                    });
                });
                //В каком режиме заходим в профиль
            var profileTrigger = localStorage.getItem('profileTrigger');
            function ProfileInstructions() {
                var ProfileSteps = [
                    {
                        'next .card-step1': 'Ваш профиль с основной информацией',
                        timeout:1000,
                        margin: 60,
                        bottom: 20, 
                        left: 30,   
                        top: 20,    
                        right: 20,
                        nextButton: { className: 'btn-success', text: 'Дальше' },
                        skipButton: { className: 'btn-warning', text: 'Завершить' },
                        prevButton: { className: 'btn-primary', text: 'Назад' }
                    },
                    {
                        'next .btn-change': 'Здесь можно обновить информацию о вас:)',
                        margin: 15,
                        nextButton: { className: 'btn-success', text: 'Дальше' },
                        skipButton: { className: 'btn-warning', text: 'Завершить' },
                        prevButton: { className: 'btn-primary', text: 'Назад' }
                    },
                    {
                        'next .btn-pass': 'Установить новый надёжный пароль можно вот тут',
                        nextButton: { className: 'btn-success', text: 'Дальше' },
                        margin: 15,
                        skipButton: { className: 'btn-warning', text: 'Завершить' },
                        prevButton: { className: 'btn-primary', text: 'Назад' }
                      

                    }
                ];


                if (User && User === "User") { 
                    ProfileSteps.push(

                        {
                            'next .pr-table': 'Товары, которые привязаны к вам.',
                            margin: 10,
                            nextButton: { className: 'btn-success', text: 'Дальше' },
                            skipButton: { className: 'btn-warning', text: 'Завершить' },
                            prevButton: { className: 'btn-primary', text: 'Назад' }
                        
                        }
                    );
                }

                if(User == "Admin"){
                    ProfileSteps.push(

                        {
                            'next .table-pr': 'Товары, которые привязаны к вам.',
                            margin: 10,
                            nextButton: { className: 'btn-success', text: 'Дальше' },
                            skipButton: { className: 'btn-warning', text: 'Завершить' },
                            prevButton: { className: 'btn-primary', text: 'Назад' }
                        },

                        {
                            'next #unbinding': 'Функция администратора: Вы можете открепить товары',
                            nextButton: { className: 'btn-success', text: 'Дальше' },
                            skipButton: { className: 'btn-warning', text: 'Завершить' },
                            prevButton: { className: 'btn-primary', text: 'Назад' }
                        }
                    );
                }
             
                var enjoyUserStart = new EnjoyHint({
                   
                    onEnd: function () {
                        if (profileTrigger !=='false'){
                            localStorage.setItem('enjoyHintStep', 1);
                            localStorage.removeItem('profileTrigger');
                            window.location.href = '/Home/Index';
                        }
                        
                      
                      
                    }
                });

                enjoyUserStart.set(ProfileSteps);
                enjoyUserStart.run();
            }



                //Система подсказок
           
          
            if (profileTrigger !== 'false') {
                localStorage.removeItem('profileTrigger');
                ProfileInstructions();

            }

            $(document).on('keydown', function (e) {
                if (e.key === 'F1') {
                    e.preventDefault();
                    ProfileInstructions();
                }
            });

        });

        </script>

    }

