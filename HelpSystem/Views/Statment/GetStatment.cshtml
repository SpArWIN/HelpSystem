@using HelpSystem.Domain.Enum
@model dynamic

@{
    ViewBag.Title = "Список заявок";
    Layout = "_Layout";
}

<link rel="stylesheet" href="https://cdn.datatables.net/2.0.0/css/dataTables.dataTables.css" />
<style>
    .table-container {
        margin-bottom: 30px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        padding: 10px;
    }

    </style>


<div  class="table-container">
    <table class="display" id="GetAllSstatTable">
        <thead>
        <tr>
            <th>Дата создания</th>
            <th>Тема</th>
            <th>От кого</th>
            <th>Статус выполнения</th>
            <th style="display: none;">ID</th>
            <th>Действия</th>
        </tr>
        </thead>
    </table>
</div>



@section Scripts
{
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
    <script>
        function BindClick() {
            var hiddenId = $('#hhID').val();
            var productsId = $('#ProductsID').val();
            var Com = $('#Comment').val();
            BindProduct(hiddenId, productsId,Com);
        }

        $(document).ready(function () {

            var hasData;

            let Data = $("#GetAllSstatTable").DataTable({
                ajax: {
                    url: "@Url.Action("GetStatmentsData")",
                    type: "POST",
                    dataSrc: "data"
                },
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.25/i18n/Russian.json',
                    emptyTable: "Нет заявок для отображения"
                },
                columns: [
                    { data: "dataCreated", name: "DataCreated" },
                    { data: "reason", name: "Reason" },
                    { data: "fullName", name: "FullName" },
                    { data: "status", name: "Status" },
                    { data: "id", name: "Id", visible: false },
                    {
                        data: null,
                        sortable: false,
                        render: function (data, type, row) {
                            return '<button class="btn btn-success btn-block btn-op" ">Ответить</button>';
                        }
                    }
                ],
                initComplete: function (settings, json) {
                    hasData = Data.rows().count() > 0;
                    setupTooltips(hasData);
                }
            });


            // Делегирование события клика

            $('#GetAllSstatTable').on('click',
                '.btn-op', function () {
                    var rowData = Data.row($(this).parents('tr')).data();
                    openModal({ modalId: 'StateModdal', url: '/Statment/GetStatUser', data: rowData.id });
                    var newStatus = '@((int)StatusStatement.Reviewed)';
                    UpdateStatus({ data: rowData.id, newStatus: newStatus });
                });


       //Подсказки
           
            function setupTooltips(hasData) {

                var GetStap = localStorage.getItem('GetStatments');
                var GetStepStatments = [];
                var enjoyUserStart = new EnjoyHint({
                    onEnd: function () {
                        // Если мы в режиме подсказки
                        if (GetStap !== 'false') {
                            Swal.fire({
                                title: 'Информация',
                                icon: 'info',
                                text: 'Дальше нужно смотреть в оба глаза!',
                                showConfirmButton: 'Хорошо!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '/Home/Index';
                                }
                            });
                        }
                    }
                });

                GetStepStatments.push(
                    {
                        'next .table-container': 'Здесь отображаются все заявки пользователей',
                        margin: 15,
                        timeout: 1400,
                        nextButton: { className: 'btn-success', text: 'Дальше' },
                        skipButton: { className: 'btn-warning', text: 'Завершить' },
                        prevButton: { className: 'btn-primary', text: 'Назад' },
                    }
                );

                if (hasData) {
                    GetStepStatments.push(
                        {
                            'click .btn-success': 'Попробуем ответить на заявку!',
                            margin: 15,
                            nextButton: { className: 'btn-success', text: 'Дальше' },
                            skipButton: { className: 'btn-warning', text: 'Завершить' },
                            prevButton: { className: 'btn-primary', text: 'Назад' },
                        },
                        {//TODO Разобраться с модальным окном
                            'click #BtnBind': 'Попробуем привязать товар?',
                            nextButton: { className: 'btn-success', text: 'Дальше' },
                            skipButton: { className: 'btn-warning', text: 'Завершить' },
                            prevButton: { className: 'btn-primary', text: 'Назад' },
                        },
                        {

                        }
                    );
                }

                if (GetStap !== 'false') {
                    enjoyUserStart.set(GetStepStatments);
                    enjoyUserStart.run();
                    localStorage.removeItem('GetStatments');
                }

                $(document).on('keydown', function (e) {
                    if (e.key === "F1") {
                        e.preventDefault();
                        enjoyUserStart.set(GetStepStatments);
                        enjoyUserStart.run();
                    }
                });

                enjoyUserStart.set(GetStepStatments);
                enjoyUserStart.run();
            }
       


            // if (GetStap !== 'false') {
            //     enjoyUserStart.set(GetStepStatments);
            //     enjoyUserStart.run();
            //     localStorage.removeItem('GetStatments');
            // }

            // $(document).on('keydown', function (e) {
            //     if (e.key === "F1") {
            //         e.preventDefault();
            //         enjoyUserStart.set(GetStepStatments);
            //         enjoyUserStart.run();
            //     }
            // });
        });


    </script>
}