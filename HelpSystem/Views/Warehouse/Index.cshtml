@model IEnumerable<HelpSystem.Domain.ViewModel.Warehouse.WarehouseViewModel>

@{
    ViewBag.Title = "Склад";
    Layout = "_Layout";
}
<link href="~/css/myanimate.css" rel="stylesheet" />
<style>
    /* Добавляем границу вокруг элемента <ul> с классом nav и nav-pills */
    ul.nav.nav-pills {
      border: 1px solid #ccc;
      border-radius: 5px; /* Для скругления углов */
      padding: 5px; /* Добавляем немного отступа внутри границы */
    }
  </style>

<ul  class="nav nav-pills">
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="WarehouseId" role="button" data-bs-toggle="dropdown" aria-expanded="false">Склады</a>
        <ul class="dropdown-menu" aria-labelledby="navBarReferences">
            <li><a class="dropdown-item" id="WarehouseAdd" href="#"  >Добавить склад</a></li>
        </ul>
    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="FindProductId" role="button" data-bs-toggle="dropdown" aria-expanded="false">Поиск товара</a>
        <ul class="dropdown-menu" aria-labelledby="navBarReferences">
            <li><a class="dropdown-item" id="FindProduct" href="#">Найти товар</a></li>
        </ul>
    </li>
</ul>
@if (Model != null && Model.Any())
{


    <div class="row">
        @foreach (var Warehouse in Model)
        {
            <div class="col-md-3 mb-3">
                <div class="card user-animation mt-3">
                    <div class="card-header">
                        <p class="card-title">Склад</p>
                    </div>
                    <div class="card-body">
                        <p style="text-align:center; font-size:20px;" class="card-text">@Warehouse.WarehouseName</p>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <p class="text-muted">Количество товара на складе: @Warehouse.TotalCountWarehouse</p>
                        </div>
                        <div class="d-grid-gap-2">
                            <a id="BtnChange" class="btn btn-outline-primary" onclick="openModal({ modalId: 'modal', url: '/Warehouse/GetCurrentWarehouse', data: '@Warehouse.Id' , context: 'warehouse' }) ">Изменить</a>
                            <a class="btn btn-outline-danger" onclick="openModal({modalId: 'ModalMove', url:'/Warehouse/GetProductsDetail', data: '@Warehouse.Id' , context: 'MoveProductWarehouse'}) ">Переместить товар</a>
                            <a type="button" style="margin:5px;" class="btn btn-outline-info" onclick="openModal({modalId: 'DetailWarehouse', url:'/Warehouse/GetProductsWarehouse', data: '@Warehouse.Id' , context: 'ListWarehouse'})  ">Список товаров</a>
                        </div>
                        
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>Список складов пуст</p>
}






@section Scripts
{
   
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.full.min.js" integrity="sha512-RtZU3AyMVArmHLiW0suEZ9McadTdegwbgtiQl5Qqo9kunkVg1ofwueXD8/8wv3Af8jkME3DDe3yLfR8HSJfT2g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

    <script>




        $(document).ready(function() {
            $('.user-animation').addClass('show');
            $('#WarehouseAdd').on('click', async function () {
                const { value: WarehouseNmae } = await Swal.fire({
                    title: 'Добавление склада',
                    input: 'text',
                    inputPlaceholder: 'Введите наименование склада ',
                    inputValidator: (value) => {
                        if (!value || value.length < 5) {
                            return 'Минимальная длина наименования - 5 символов!';
                        }
                    }
                });

                if (WarehouseNmae) {
                    CreateWarehouse(WarehouseNmae);
                }
            });
            $('#FindProduct').on('click', function() {
                    $('#FindProducts').modal('show');
                    initialiseFindProduct();

            });

        });
      


    </script>
}
