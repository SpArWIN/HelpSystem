@model IEnumerable<HelpSystem.Domain.ViewModel.Provider.ProviderViewModel>?

@{
    ViewBag.Title = "Поставщики";
    Layout = "_Layout";
}
<style>
    /* Добавляем границу вокруг элемента <ul> с классом nav и nav-pills */
    ul.nav.nav-pills {
        border: 1px solid #ccc;
        border-radius: 6px; /* Для скругления углов */
        padding: 5px; /* Добавляем немного отступа внутри границы */
    }
</style>
<link href="~/css/myanimate.css" rel="stylesheet" />
<ul class="nav nav-pills">
    <li class="nav-item">
        <a class="nav-link" href="#" id="ProviderAdd">Добавить поставщика</a>
    </li>
</ul>
@if (Model != null && Model.Any())
{
   

    <div class="row">
        <script>
            var hasData = true;
        </script>
        @foreach (var Us in Model)
        {
            if (!Us.IsFreeze)
            {
                <div class="col-md-3 mb-3 unfr">
                    <div class="card user-animation" style="  width: 100%; margin:15px; ">
                    <div class="card-header">
                        <p class="card-title">Поставщик</p>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Us.ProviderName</p>
                    </div>
                        <script>
                            var freeze = false;
                        </script>
                    <div class="card-footer">
                        <div class="d-grid-gap-2">



                            <a id="BtnChange" class="btn btn-outline-warning" onclick="openModal({modalId: 'modal', url:'/Provider/GetCurrentProvider', data: '@Us.ProviderId' , context: 'provider'})  ">Изменить</a>

                            <a style="margin:5px;" class="btn btn-outline-primary ProvFreeze" data-name="@Us.ProviderName" data-id="@Us.ProviderId">Заморозить поставщика</a>
                        </div>
                    </div>
                </div>
                </div>
            }
            else
            {

                <div class="col-md-3 mb-3 frz">
                    <div class="card user-animation card-freeze mt-3">
                        <div class="card-header">
                            <img src="/myIcon/Provider.png" width="128;" height="128;" class="card-img card-img-top" alt="Склад" />
                            <p style="font-family:'Cascadia Mono'" class="card-title">Поставщик - @Us.ProviderName</p>
                        </div>
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                <a data-name="@Us.ProviderName" data-id="@Us.ProviderId" class="btn btn-outline-success BtnUnFreeze">Разморозить поставщика </a>
                            </div>
                        </div>
                        <script>
                            var freeze = true;
                        </script>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <p style="text-align : center; font-size:24px;">Список поставщиков пуст</p>
    <script>
        var hasData = false;
    </script>
}
<!-- Фоновый затемнитель -->
<div class="frozen-background"></div>

<div class="unfrozen-background "></div>



@section Scripts
{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js">
    </script>
 

    <script>
        $(document).ready(function () {

            $('.user-animation').addClass('show');
            
            $('#ProviderAdd').on('click', async function () {
                const { value: providerName } = await Swal.fire({
                    title: 'Укажите наименование поставщика',
                    input: 'text',
                    inputPlaceholder: 'Введите наименование поставщика ',
                    confirmButtonText:'Создать',
                    inputValidator: (value) => {
                        if (!value || value.length < 5) {
                            return 'Минимальная длина наименования - 5 символов!';
                        }
                    }
                });

                if (providerName) {
                    CreateProvider(providerName);
                }
            });
            //Заморозка поставщика

            $('.ProvFreeze').on('click', function () {
                var ProviderName = $(this).data('name');
                var Id = $(this).data('id');

                Swal.fire({
                    title: 'Вы действительно хотите заморозить поставщика ' + ProviderName + '?\n Это приостановит возможность  указания импортёра в качестве поставщика.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Да, заморозить',
                    cancelButtonText: 'Отменить заморозку',
                    background: " url(/myIcon/FreeZingS.png)",
                    color: "#fff",

                }).then((result) => {
                    if (result.isConfirmed) {

                        FreeZing('/Provider/FreezePh', 'Заморозка поставщика  ', Id);

                    }
                });



            });
            //Разморозка 
            $('.BtnUnFreeze').on('click', function () {
                var ProviderName = $(this).data('name');
                var Id = $(this).data('id');

                Swal.fire({
                    title: 'Вы действительно хотите разморозить поставщика ' + ProviderName + '?\n Это возобновит возможность  указания импортёра в качестве поставщика.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Да, разморозить',
                    cancelButtonText: 'Отменить разморозку',
                    background: " url(/myIcon/Vesna.png)",
                    color: "#fff",

                }).then((result) => {
                    if (result.isConfirmed) {

                        UnFreezing('/Provider/UnFreezePh', 'Разморозка поставщика  ', Id);

                    }
                });
            });

            var isPressF1Key = false; //Если захотим просто вспомнить как это работает
            var GetSteps = localStorage.getItem('Provider');
            localStorage.setItem('Warehouse', 'false');
            //Система подсказок
            function ProviderTool(forceRun = false) {
                var Enj = new EnjoyHint({
                    onEnd: function () {
                        if (GetSteps !== 'false') {
                            Swal.fire({
                                title: 'Внимание',
                                text: 'Переходим на важный участок функционала --> к справочникам :Склады',
                                icon: 'warning',
                                confirmButtonText: 'Приступаем!',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    localStorage.setItem('Warehouse', 'true');
                                    location.href = '/Warehouse/Index';
                                    localStorage.removeItem('Provider');
                                }
                            });
                        }
                        if(isPressF1Key){
                            Swal.fire({
                                title: 'Внимание',
                                text: 'В режиме подсказки функция добавления недоступна',
                                icon: 'warning',
                                confirmButtonText: 'Понял'
                            });
                            isPressF1Key = false;
                        }
                    }
                });
                var providerSteps = [];
                if (GetSteps !== 'false' && !forceRun) {

                    return;
                }

                    if (hasData !== 'undefined' && hasData) {
                        // Подсказка для незамороженного поставщика
                        if (!freeze) {
                            providerSteps.push(
                                {
                                    'next .unfr': 'В карточке отображается наименование поставщика',
                                    margin: 15,
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    timeout:500
                                },
                                {
                                    'click .ProvFreeze': 'Эта функция используется в случае, если поставщик больше не осуществляет поставки.',
                                    margin: 15,
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    onBeforeStart: function () {
                                        Swal.fire({
                                            title: 'Внимание',
                                            text: 'В режиме подсказки, функция заморозки будет отключена!',
                                            icon: 'info'
                                        });
                                        $('#confirmButtonText').prop('disabled', true);
                                    }
                                },
                                {
                                    'click #ProviderAdd': 'Для того, чтобы добавить поставщика, нажмите сюда',
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    onBeforeStart: function () {
                                        Swal.fire({
                                            title: 'Внимание',
                                            text: 'В режиме подсказки функция добавления будет отключена!',
                                            icon: 'info'
                                        });
                                        $('#confirmButtonText').prop('disabled', true);
                                    }
                                }
                            );
                        }
                        // Для замороженных
                        if (freeze) {
                            providerSteps.push(
                                {
                                    'next .frz': 'В карточке отображается наименование замороженного поставщика',
                                    margin: 15,
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    timeout: 500
                                },
                                {
                                    'click .BtnUnFreeze': 'Эта функция используется для разморозки поставщика.',
                                    margin: 15,
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    onBeforeStart: function () {
                                        Swal.fire({
                                            title: 'Внимание',
                                            text: 'В режиме подсказки. функция разморозки будет отключена!',
                                            icon: 'info'
                                        });
                                        $('#confirmButtonText').prop('disabled', true);
                                    }
                                },
                                {
                                    'click #ProviderAdd': 'Для того, чтобы добавить поставщика, нажмите сюда',
                                    nextButton: { className: 'btn-success', text: 'Дальше' },
                                    skipButton: { className: 'btn-warning', text: 'Завершить' },
                                    prevButton: { className: 'btn-primary', text: 'Назад' },
                                    onBeforeStart: function () {
                                        Swal.fire({
                                            title: 'Внимание',
                                            text: 'В режиме подсказки функция добавления будет отключена!',
                                            icon: 'info'
                                        });
                                        $('#confirmButtonText').prop('disabled', true);
                                    }
                                }

                            );
                        }
                    } else {
                        // Подсказка для добавления поставщика
                        providerSteps.push(
                            {
                                'click #ProviderAdd': 'Для того, чтобы добавить поставщика, нажмите сюда',
                                nextButton: { className: 'btn-success', text: 'Дальше' },
                                skipButton: { className: 'btn-warning', text: 'Завершить' },
                                prevButton: { className: 'btn-primary', text: 'Назад' },
                                onBeforeStart: function () {
                                    Swal.fire({
                                        title: 'Внимание',
                                        text: 'В режиме подсказки функция добавления будет отключена!',
                                        icon: 'info'
                                    });
                                    $('#confirmButtonText').prop('disabled', true);
                                }
                            }
                        );
                    }
                

           
                Enj.set(providerSteps);

              
                Enj.run();

                // После окончания подсказок
               
            }


            if (GetSteps !== 'false') {

                ProviderTool(true);
            }

            $(document).on('keydown', function (e) {
                if (e.key == 'F1') {
                    //Если мы просто захотели вспомнить как это делается, пожалуйста
                    e.preventDefault();
                    isPressF1Key = true;
                    ProviderTool(isPressF1Key);
                   
                }
            });
        });

    </script>
}
